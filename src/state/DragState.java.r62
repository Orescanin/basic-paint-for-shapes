package state;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Point;
import java.awt.event.MouseEvent;
import java.awt.geom.Point2D;

import model.CircleElement;
import model.PageDevice;
import model.PageElement;
import model.PageModel;
import model.RectangleElement;
import model.TriangleElement;
import view.MyPage;

public class DragState extends State {
	
	private MyPage page;
	private PageElement pageElement=null;
	private Point2D positionElement;
	private CircleElement novi;
	private CircleElement temp=null;
	private RectangleElement rectangleElement=null;
	private RectangleElement oldrect=null;
	private TriangleElement triangleElement=null;
	private TriangleElement oldtriang=null;
	private double x;
	private double y;
	private double razlikaX;
	private double razlikaY;
	private int selected =0;
	
	public DragState(MyPage p) {
		page=p;
	}
	
	
	@Override
	public void mousePressed(MouseEvent e) {
		
		Point position=e.getPoint();
		
		int check = page.getPageModel().getDeviceAtPosition(position);
		if(e.getButton()==MouseEvent.BUTTON1) {
		
			if (check != -1) {
				pageElement=page.getPageModel().getDeviceAt(check);
				PageDevice pageDevice=(PageDevice) pageElement;
				positionElement = new Point2D.Double(); 
				positionElement.setLocation(pageDevice.getPosition().getX()+pageDevice.getSize().getHeight()/2,pageDevice.getPosition().getY()+ pageDevice.getSize().getHeight()/2);
				if(page.getPageModel().getSelectedDevices().contains(pageDevice))
					selected=1;
			}
			
		}
		
	}
	
	@Override
	public void mouseDragged(MouseEvent e) {
		
		if (pageElement!=null) {
			
			 Point position=e.getPoint();
			 PageDevice pageDevice=(PageDevice) pageElement;
			 if(selected==0) {
			 
			 
			 if (pageDevice instanceof CircleElement) {
				
			
			 
			 
			 CircleElement circleElement = (model.CircleElement) pageDevice;
			 int width= (int) circleElement.getSize().getWidth();
			 int height=(int) circleElement.getSize().getHeight();
			 Dimension dimension=new Dimension((int) (width),(int) (height));
			 positionElement=position;
			 page.getPageModel().removeDiagramElements(temp);
			 novi=(CircleElement) CircleElement.createCustom(positionElement, 0, dimension);
			 page.getPageModel().addDiagramElements(novi);
			 if (temp==null) {
				 page.getPageModel().removeDiagramElements(circleElement);	

			}
			 temp=novi;
			 
			 }
			 
 if (pageDevice instanceof RectangleElement) {
				 
				 RectangleElement base=(RectangleElement) pageDevice;
				 base = (model.RectangleElement) pageDevice;
				 int width= (int) base.getSize().getWidth();
				 int height=(int) base.getSize().getHeight();
				 Dimension dimension=new Dimension((int) (width),(int) (height));
				 positionElement=position;
				 page.getPageModel().removeDiagramElements(oldrect);
				 rectangleElement=(RectangleElement) rectangleElement.createCustom(positionElement, 0, dimension);
				 page.getPageModel().addDiagramElements(rectangleElement);
				 if (oldrect==null) {
					 page.getPageModel().removeDiagramElements(base);	

				}
				 oldrect=rectangleElement;
				
			}
			 if (pageDevice instanceof TriangleElement) {
				 
				 TriangleElement baza= (TriangleElement) pageDevice;
				 baza = (model.TriangleElement) pageDevice;
				 int width= (int) baza.getSize().getWidth();
				 int height=(int) baza.getSize().getHeight();
				 Dimension dimension=new Dimension((int) (width),(int) (height));
				 positionElement=position;
				 page.getPageModel().removeDiagramElements(oldtriang);
				 triangleElement=(TriangleElement) triangleElement.createCustom(positionElement, 0, dimension);
				 page.getPageModel().addDiagramElements(triangleElement);
				 if (oldtriang==null) {
					 page.getPageModel().removeDiagramElements(baza);	

				}
				 oldtriang=triangleElement;
			}
		} 
			 else {
				 
				 
					 if (pageDevice instanceof CircleElement) {
						 
						 System.out.println("PRVI SELEKTOVANI");
						 CircleElement circleElement=(model.CircleElement) pageDevice;
						 positionElement=e.getPoint();
						 x=pageDevice.getPosition().getX();
						 y=pageDevice.getPosition().getY();
						 razlikaX=e.getPoint().getX()-x;
						 razlikaY=e.getPoint().getY()-y;
						 
						 int width= (int) circleElement.getSize().getWidth();
						 int height=(int) circleElement.getSize().getHeight();
						 Dimension dimension=new Dimension((int) (width),(int) (height));
						 page.getPageModel().removeDiagramElements(temp);
						 page.getPageModel().deletedSelectedDevice(temp);
						 novi=(CircleElement) CircleElement.createCustom(positionElement, 0, dimension);
						// System.out.println(novi.getPosition().toString()+" ---> Pozicija 'Novog'");
						 novi.setStrokeColor(Color.BLUE);
						 page.getPageModel().addDiagramElements(novi);
						 page.getPageModel().addSelectedDevice(novi);
						 if (temp==null) {
							 page.getPageModel().removeDiagramElements(circleElement);
							 page.getPageModel().deletedSelectedDevice(circleElement);
		
						}
						 temp=novi;
						
					 
						 for(int i=0; i<page.getPageModel().getSelectedDevices().size();i++) {
							 
							 if(page.getPageModel().getSelectedDevices().get(i).equals(circleElement))
							 {
								System.out.println("taj sam");
								continue;
							
							 }
							 else
							 {
								 circleElement = (model.CircleElement) page.getPageModel().getSelectedDevices().get(i);
								 positionElement.setLocation(page.getPageModel().getSelectedDevices().get(i).getPosition().getX()+razlikaX, page.getPageModel().getSelectedDevices().get(i).getPosition().getY()+razlikaY);
								 //System.out.println("Position Element: "+positionElement.toString());
							 }
							 
					  width= (int) circleElement.getSize().getWidth();
					  height=(int) circleElement.getSize().getHeight();
					  dimension=new Dimension((int) (width),(int) (height));
					 temp=circleElement;
					 page.getPageModel().removeDiagramElements(temp);
					 page.getPageModel().deletedSelectedDevice(temp);
					 novi=(CircleElement) CircleElement.createCustom(positionElement, 0, dimension);
					// System.out.println(novi.getPosition().toString()+" ---> Pozicija 'Novog'");
					 novi.setStrokeColor(Color.BLUE);
					 page.getPageModel().addDiagramElements(novi);
					 page.getPageModel().addSelectedDevice(novi);
					 if (temp==null) {
						 page.getPageModel().removeDiagramElements(circleElement);
						 page.getPageModel().deletedSelectedDevice(circleElement);
	
					}
					 temp=novi;
					

					 
					 }
					 }
					 
		 if (pageDevice instanceof RectangleElement) {
						 
						 RectangleElement base=(RectangleElement) pageDevice;
						 base = (model.RectangleElement) pageDevice;
						 int width= (int) base.getSize().getWidth();
						 int height=(int) base.getSize().getHeight();
						 Dimension dimension=new Dimension((int) (width),(int) (height));
						 page.getPageModel().removeDiagramElements(oldrect);
						 rectangleElement=(RectangleElement) rectangleElement.createCustom(positionElement, 0, dimension);
						 rectangleElement.setStrokeColor(Color.BLUE);
						 page.getPageModel().addDiagramElements(rectangleElement);
						 if (oldrect==null) {
							 page.getPageModel().removeDiagramElements(base);	
	
						}
						 oldrect=rectangleElement;
						
					}
					 if (pageDevice instanceof TriangleElement) {
						 
						 TriangleElement baza= (TriangleElement) pageDevice;
						 baza = (model.TriangleElement) pageDevice;
						 int width= (int) baza.getSize().getWidth();
						 int height=(int) baza.getSize().getHeight();
						 Dimension dimension=new Dimension((int) (width),(int) (height));
						 page.getPageModel().removeDiagramElements(oldtriang);
						 triangleElement=(TriangleElement) triangleElement.createCustom(positionElement, 0, dimension);
						 triangleElement.setStrokeColor(Color.BLUE);
						 page.getPageModel().addDiagramElements(triangleElement);
						 if (oldtriang==null) {
							 page.getPageModel().removeDiagramElements(baza);	
	
						}
						 oldtriang=triangleElement;
					}
				
					 
				  
				 System.out.println("Izaso iz fora");
			 }
		}
		
	}
	
	
	@Override
	public void mouseReleased(MouseEvent e) {
		
		Point position = e.getPoint();
		 pageElement=null;
		 temp=null;
		 oldrect=null;
		 oldtriang=null;
		selected=0;
	}
	
}
